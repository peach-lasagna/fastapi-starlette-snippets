{
  "basic misimple BaseHTTPMiddleware middleware": {
    "prefix": "httpmidd",
    "body": [
      "${1:from typing import Callable}",
      "${1:from fastapi import FastAPI, Request, Response}",
      "${1:from starlette.middleware.base import BaseHTTPMiddleware}",
      "",
      "class $2Middleware(BaseHTTPMiddleware):",
      "    async def dispatch(self, request: Request, call_next: Callable) -> Response:",
      "        $3",
      "        response = await call_next(request)",
      "        $4",
      "        return response"
    ],
    "description": "simple BaseHTTPMiddleware middleware"
  },
  " add middlware to app": {
    "prefix": "aam",
    "body": [
      "${1:app}.add_middleware(",
      "    $2",
      ")"
    ],
    "description": " add middlware to app"
  },
  "include router to app": {
    "prefix": "air",
    "body": [
      "${1:app}.include_router(",
      "    $2",
      ")"
    ],
    "description": "include router to app"
  },
  "add CORS middleware to app": {
    "prefix": "acors",
    "body": [
      "${1:app}.add_middleware(",
      "    CORSMiddleware,",
      "    allow_origins=${2:allow_origins},",
      "    allow_credentials=True,",
      "    allow_methods=[\"*\"],",
      "    allow_headers=[\"*\"],",
      ")"
    ],
    "description": "add CORS middleware to app"
  },
  "add an exception handler for HTTPException with specific code": {
    "prefix": "ExcHanCode",
    "body": [
      "@${1:app}.exception_handler($2)",
      "async def ${3:ExceptionHandler}(self, request):",
      "    ${4:return PlainTextResponse(\"Error!\")}"
    ],
    "description": "add an exception handler for HTTPException with specific code"
  },
  "create APIRouter": {
    "prefix": "router",
    "body": [
      "${1:from fastapi import APIRouter}",
      "$1",
      "$1",
      "${2:router} = APIRouter()"
    ],
    "description": "create APIRouter"
  },
  "add event handler": {
    "prefix": "aevh",
    "body": [
      "${1:app}.add_event_handler(",
      "    ${2:\"startup\"},",
      "    ${3:function}",
      ")"
    ],
    "description": "add event handler"
  },
  "add exception handler": {
    "prefix": "aexh",
    "body": [
      "${1:app}.add_exception_handler(${2:HTTPException}, ${3:http_error_handler})"
    ],
    "description": "add exception handler"
  }
}